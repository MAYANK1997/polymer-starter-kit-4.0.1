document.addEventListener('DOMContentLoaded', () => {
    // Select the grid container
    const gridDiv = document.querySelector('#myGrid');

    // Show loading message
    gridDiv.innerHTML = '<p class="loading">Loading data...</p>';

    // Column definitions based on JSONPlaceholder user data
    const columnDefs = [
        { headerName: 'ID', field: 'id', sortable: true, filter: 'agNumberColumnFilter', width: 100 },
        { headerName: 'Name', field: 'name', sortable: true, filter: 'agTextColumnFilter' },
        { headerName: 'Email', field: 'email', sortable: true, filter: 'agTextColumnFilter' },
        { headerName: 'Phone', field: 'phone', sortable: true, filter: 'agTextColumnFilter' },
        { 
            headerName: 'Company', 
            field: 'company.name', 
            sortable: true, 
            filter: 'agTextColumnFilter' 
        }
    ];

    // Grid options
    const gridOptions = {
        columnDefs: columnDefs,
        rowData: [],
        pagination: true,
        paginationPageSize: 10,
        defaultColDef: {
            flex: 1,
            minWidth: 150,
            sortable: true,
            filter: true,
            resizable: true
        },
    };

    // Initialize AG Grid
    new agGrid.Grid(gridDiv, gridOptions);

    // Fetch data from JSONPlaceholder mock API
    fetch('https://jsonplaceholder.typicode.com/users')
        .then(response => {
            if (!response.ok) {
                throw new Error('Failed to fetch data');
            }
            return response.json();
        })
        .then(data => {
            // Update grid with fetched data
            gridOptions.api.setRowData(data);
        })
        .catch(error => {
            console.error('Error:', error);
            gridDiv.innerHTML = '<p class="error">Failed to load data. Please try again later.</p>';
        });
});
