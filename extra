<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restricted List</title>
    <!-- AG-Grid CSS -->
    <link rel="stylesheet" href="https://unpkg.com/ag-grid-community@31.0.2/dist/styles/ag-grid.css">
    <link rel="stylesheet" href="https://unpkg.com/ag-grid-community@31.0.2/dist/styles/ag-theme-alpine.css">
    <link rel="stylesheet" href="https://unpkg.com/ag-grid-community@31.0.2/dist/styles/ag-theme-alpine-dark.css">
    <!-- Embedded CSS -->
    <style>
        html, body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            width: 100vw;
            overflow-x: hidden;
            transition: background-color 0.3s, color 0.3s;
        }
        body.light-mode {
            background-color: #f5f7fa;
            color: #333;
        }
        body.dark-mode {
            background-color: #121212;
            color: #e0e0e0;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            width: 100%;
            box-sizing: border-box;
        }
        .header .logo {
            font-size: 24px;
            font-weight: bold;
            color: #ffffff;
            background-color: #1a73e8;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
        }
        .header .title {
            font-size: 24px;
            font-weight: bold;
            margin: 0;
            transition: color 0.3s;
        }
        .light-mode .header .title {
            color: #333;
        }
        .dark-mode .header .title {
            color: #e0e0e0;
        }
        .header .actions {
            display: flex;
            gap: 10px;
        }
        .header .actions button {
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
        .light-mode .header .actions button {
            border: 1px solid #e0e0e0;
            background-color: white;
            color: #333;
        }
        .dark-mode .header .actions button {
            border: 1px solid #444;
            background-color: #333;
            color: #e0e0e0;
        }
        .tabs {
            display: flex;
            gap: 20px;
            padding: 0 20px;
            border-bottom: 1px solid;
            transition: border-color 0.3s;
            width: 100%;
            box-sizing: border-box;
        }
        .light-mode .tabs {
            border-color: #e0e0e0;
        }
        .dark-mode .tabs {
            border-color: #444;
        }
        .tabs div {
            padding: 10px 0;
            cursor: pointer;
            font-size: 14px;
            transition: color 0.3s;
        }
        .light-mode .tabs div {
            color: #666;
        }
        .dark-mode .tabs div {
            color: #a0a0a0;
        }
        .tabs div.active {
            color: #1a73e8;
            border-bottom: 2px solid #1a73e8;
        }
        .controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            width: 100%;
            box-sizing: border-box;
        }
        .controls .left {
            display: flex;
            gap: 10px;
        }
        .controls button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }
        .controls .add-btn {
            font-weight: bold;
            transition: background-color 0.3s, color 0.3s;
        }
        .light-mode .controls .add-btn {
            background-color: #ffffff;
            color: #333;
        }
        .dark-mode .controls .add-btn {
            background-color: #ffffff;
            color: #333;
        }
        .controls .search {
            padding: 8px;
            border-radius: 4px;
            width: 200px;
            font-size: 14px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
        .light-mode .controls .search {
            border: 1px solid #e0e0e0;
            background-color: white;
            color: #333;
        }
        .dark-mode .controls .search {
            border: 1px solid #444;
            background-color: #333;
            color: #e0e0e0;
        }
        .controls .right {
            display: flex;
            gap: 10px;
        }
        .controls .export,
        .controls .clear-filters {
            display: flex;
            align-items: center;
            gap: 5px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
        .light-mode .controls .export,
        .light-mode .controls .clear-filters {
            background-color: white;
            border: 1px solid #e0e0e0;
            color: #333;
        }
        .dark-mode .controls .export,
        .dark-mode .controls .clear-filters {
            background-color: #333;
            border: 1px solid #444;
            color: #e0e0e0;
        }
        .light-mode .ag-theme-alpine {
            height: calc(100vh - 250px); /* Adjust height to fit full screen */
            width: 100%;
            --ag-header-background-color: #f5f7fa;
            --ag-header-foreground-color: #333;
            --ag-row-hover-color: #e8f0fe;
            --ag-background-color: white;
            --ag-foreground-color: #333;
            --ag-border-color: #e0e0e0;
            --ag-font-size: 14px;
        }
        .dark-mode .ag-theme-alpine-dark {
            height: calc(100vh - 250px); /* Adjust height to fit full screen */
            width: 100%;
            --ag-header-background-color: #2a2a2a;
            --ag-header-foreground-color: #e0e0e0;
            --ag-row-hover-color: #444;
            --ag-background-color: #1e1e1e;
            --ag-foreground-color: #e0e0e0;
            --ag-border-color: #444;
            --ag-font-size: 14px;
        }
        .ag-theme-alpine .ag-header-cell,
        .ag-theme-alpine-dark .ag-header-cell {
            font-weight: normal;
        }
        .ag-theme-alpine .ag-cell,
        .ag-theme-alpine-dark .ag-cell {
            display: flex;
            align-items: center;
        }
        .ag-theme-alpine .ag-cell .issue-type,
        .ag-theme-alpine-dark .ag-cell .issue-type {
            background-color: #1a73e8;
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
        }
        .ag-theme-alpine .ag-cell .available-for-tag,
        .ag-theme-alpine-dark .ag-cell .available-for-tag {
            background-color: #1a73e8;
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
            margin-right: 4px;
        }
        .action-icon {
            cursor: pointer;
            width: 16px;
            height: 16px;
            margin-right: 8px;
            transition: fill 0.3s;
        }
        .dark-mode .action-icon {
            fill: #ffffff;
        }
        .dark-mode .action-icon:hover {
            fill: #aaaaaa;
        }
        .light-mode .action-icon {
            fill: #666666;
        }
        .light-mode .action-icon:hover {
            fill: #333333;
        }
        .pagination {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            font-size: 14px;
            width: 100%;
            box-sizing: border-box;
        }
        .pagination .left {
            transition: color 0.3s;
        }
        .light-mode .pagination .left {
            color: #666;
        }
        .dark-mode .pagination .left {
            color: #a0a0a0;
        }
        .pagination .right {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .pagination button {
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
        .light-mode .pagination button {
            border: 1px solid #e0e0e0;
            background-color: white;
            color: #333;
        }
        .dark-mode .pagination button {
            border: 1px solid #444;
            background-color: #333;
            color: #e0e0e0;
        }
        .pagination .page-info {
            transition: color 0.3s;
        }
        .light-mode .pagination .page-info {
            color: #666;
        }
        .dark-mode .pagination .page-info {
            color: #a0a0a0;
        }
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            padding: 20px;
            border-radius: 8px;
            width: 800px;
            max-width: 90%;
            position: relative;
            transition: background-color 0.3s, color 0.3s;
        }
        .light-mode .modal-content {
            background-color: #ffffff;
            color: #333;
        }
        .dark-mode .modal-content {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }
        .modal-content h2 {
            margin: 0 0 20px 0;
            font-size: 18px;
        }
        .modal-content .close {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
            transition: color 0.3s;
        }
        .light-mode .modal-content .close {
            color: #333;
        }
        .dark-mode .modal-content .close {
            color: #e0e0e0;
        }
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        .form-group {
            display: flex;
            flex-direction: column;
        }
        .form-group label {
            margin-bottom: 5px;
            font-size: 14px;
        }
        .form-group input,
        .form-group select {
            padding: 8px;
            border-radius: 4px;
            font-size: 14px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }
        .light-mode .form-group input,
        .light-mode .form-group select {
            border: 1px solid #e0e0e0;
            background-color: #f5f5f5;
            color: #333;
        }
        .dark-mode .form-group input,
        .dark-mode .form-group select {
            border: 1px solid #444;
            background-color: #333;
            color: #e0e0e0;
        }
        .form-group input[type="date"] {
            width: 100%;
            box-sizing: border-box;
        }
        .form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        .form-buttons button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }
        .form-buttons .close-btn {
            background-color: #d32f2f;
            color: white;
        }
        .form-buttons .submit-btn {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }
        .light-mode .form-buttons .submit-btn {
            background-color: #333;
            color: #ffffff;
        }
        /* Delete Modal Styles */
        .delete-modal-content {
            padding: 20px;
            border-radius: 8px;
            width: 400px;
            max-width: 90%;
            position: relative;
            transition: background-color 0.3s, color 0.3s;
        }
        .light-mode .delete-modal-content {
            background-color: #ffffff;
            color: #333;
        }
        .dark-mode .delete-modal-content {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }
        .delete-form-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 15px;
        }
        /* Add Category Form Styles (Above Grid) */
        #addCategoryForm {
            display: none;
            padding: 12px 20px;
            border-radius: 8px;
            transition: background-color 0.3s, color 0.3s;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            width: 100%;
            box-sizing: border-box;
        }
        .light-mode #addCategoryForm {
            background-color: #ffffff;
            color: #333;
        }
        .dark-mode #addCategoryForm {
            background-color: #252525;
            color: #f0f0f0;
        }
        .form-row {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            flex-wrap: wrap;
        }
        .form-row .field-group {
            display: flex;
            flex-direction: column;
            flex: 1;
            min-width: 120px;
            max-width: 200px;
        }
        .form-row .field-group label {
            font-size: 12px;
            margin-bottom: 4px;
            transition: color 0.3s;
        }
        .light-mode .form-row .field-group label {
            color: #666;
        }
        .dark-mode .form-row .field-group label {
            color: #a0a0a0;
        }
        .form-row input,
        .form-row select {
            padding: 6px;
            border-radius: 6px;
            font-size: 14px;
            width: 100%;
            box-sizing: border-box;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s, box-shadow 0.3s;
        }
        .light-mode .form-row input,
        .light-mode .form-row select {
            border: 1px solid #e0e0e0;
            background-color: #f5f5f5;
            color: #333;
        }
        .light-mode .form-row input:focus,
        .light-mode .form-row select:focus {
            border-color: #1a73e8;
            box-shadow: 0 0 0 3px rgba(26, 115, 232, 0.2);
            outline: none;
        }
        .dark-mode .form-row input,
        .dark-mode .form-row select {
            border: 1px solid #555;
            background-color: #333;
            color: #f0f0f0;
        }
        .dark-mode .form-row input:focus,
        .dark-mode .form-row select:focus {
            border-color: #1a73e8;
            box-shadow: 0 0 0 3px rgba(26, 115, 232, 0.3);
            outline: none;
        }
        .form-row select {
            max-width: 150px;
        }
        .form-row .action-icon {
            width: 18px;
            height: 18px;
            cursor: pointer;
            transition: fill 0.3s;
            margin-top: 20px; /* Align with input fields */
        }
        .dark-mode .form-row .action-icon.submit-icon {
            fill: #1a73e8;
        }
        .dark-mode .form-row .action-icon.submit-icon:hover {
            fill: #4285f4;
        }
        .dark-mode .form-row .action-icon.close-icon {
            fill: #e63946;
        }
        .dark-mode .form-row .action-icon.close-icon:hover {
            fill: #ff5555;
        }
        .light-mode .form-row .action-icon.submit-icon {
            fill: #1a73e8;
        }
        .light-mode .form-row .action-icon.submit-icon:hover {
            fill: #4285f4;
        }
        .light-mode .form-row .action-icon.close-icon {
            fill: #e63946;
        }
        .light-mode .form-row .action-icon.close-icon:hover {
            fill: #ff5555;
        }
        /* Tab Content */
        .tab-content {
            display: none;
            width: 100%;
        }
        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body class="dark-mode">
    <div class="header">
        <div style="display: flex; align-items: center; gap: 10px;">
            <div class="logo">RL</div>
            <div class="title">Restricted List</div>
        </div>
        <div class="actions">
            <button>MP</button>
            <button id="themeToggle">
                <svg id="themeIcon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
                </svg>
            </button>
            <button>Help</button>
        </div>
    </div>
    <div class="tabs">
        <div class="active" data-tab="restrictedIssuers">Restricted Issuers</div>
        <div data-tab="restrictedIssuesHistory">Restricted Issues History</div>
        <div data-tab="restrictedInstruments">Restricted Instruments</div>
        <div data-tab="restrictionCategory">Restriction Category</div>
    </div>

    <!-- Restricted Issuers Tab -->
    <div id="restrictedIssuers" class="tab-content active">
        <div class="controls">
            <div class="left">
                <button class="add-btn" id="addIssuerBtn">+ Insert New Entry</button>
                <input type="text" class="search" placeholder="Search issuers..." id="issuerSearchInput">
            </div>
            <div class="right">
                <button class="clear-filters" id="clearIssuerFilters">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 7h16M4 12h10M4 17h6"></path>
                        <path d="M14 9l3 3-3 3M17 12H9"></path>
                    </svg>
                    Clear Filters
                </button>
                <button class="export" id="exportIssuerBtn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3"></path>
                    </svg>
                    Export
                </button>
            </div>
        </div>
        <div id="issuerGrid" class="ag-theme-alpine-dark"></div>
        <div class="pagination">
            <div class="left" id="issuerPaginationLeft">1 to 100 of 139</div>
            <div class="right">
                <div class="page-info" id="issuerPageInfo">Page 1 of 2</div>
                <button id="issuerPrevPage">Previous</button>
                <button id="issuerNextPage">Next</button>
            </div>
        </div>
    </div>

    <!-- Restricted Issues History Tab -->
    <div id="restrictedIssuesHistory" class="tab-content">
        <div class="controls">
            <div class="left">
                <input type="text" class="search" placeholder="Search history..." id="historySearchInput">
            </div>
            <div class="right">
                <button class="clear-filters" id="clearHistoryFilters">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 7h16M4 12h10M4 17h6"></path>
                        <path d="M14 9l3 3-3 3M17 12H9"></path>
                    </svg>
                    Clear Filters
                </button>
                <button class="export" id="exportHistoryBtn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3"></path>
                    </svg>
                    Export
                </button>
            </div>
        </div>
        <div id="historyGrid" class="ag-theme-alpine-dark"></div>
        <div class="pagination">
            <div class="left" id="historyPaginationLeft">1 to 100 of 139</div>
            <div class="right">
                <div class="page-info" id="historyPageInfo">Page 1 of 2</div>
                <button id="historyPrevPage">Previous</button>
                <button id="historyNextPage">Next</button>
            </div>
        </div>
    </div>

    <!-- Restricted Instruments Tab -->
    <div id="restrictedInstruments" class="tab-content">
        <div class="controls">
            <div class="left">
                <input type="text" class="search" placeholder="Search instruments..." id="instrumentsSearchInput">
            </div>
            <div class="right">
                <button class="clear-filters" id="clearInstrumentsFilters">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 7h16M4 12h10M4 17h6"></path>
                        <path d="M14 9l3 3-3 3M17 12H9"></path>
                    </svg>
                    Clear Filters
                </button>
                <button class="export" id="exportInstrumentsBtn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3"></path>
                    </svg>
                    Export
                </button>
            </div>
        </div>
        <div id="instrumentsGrid" class="ag-theme-alpine-dark"></div>
        <div class="pagination">
            <div class="left" id="instrumentsPaginationLeft">1 to 100 of 139</div>
            <div class="right">
                <div class="page-info" id="instrumentsPageInfo">Page 1 of 2</div>
                <button id="instrumentsPrevPage">Previous</button>
                <button id="instrumentsNextPage">Next</button>
            </div>
        </div>
    </div>

    <!-- Restriction Category Tab -->
    <div id="restrictionCategory" class="tab-content">
        <div class="controls">
            <div class="left">
                <button class="add-btn" id="addCategoryBtn">+ Insert New Category</button>
                <input type="text" class="search" placeholder="Search categories..." id="categorySearchInput">
            </div>
            <div class="right">
                <button class="clear-filters" id="clearCategoryFilters">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 7h16M4 12h10M4 17h6"></path>
                        <path d="M14 9l3 3-3 3M17 12H9"></path>
                    </svg>
                    Clear Filters
                </button>
                <button class="export" id="exportCategoryBtn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3"></path>
                    </svg>
                    Export
                </button>
            </div>
        </div>
        <!-- Add Category Form (Above Grid) -->
        <div id="addCategoryForm">
            <div class="form-row">
                <div class="field-group">
                    <label for="addCategoryName">Category Name</label>
                    <input type="text" id="addCategoryName" placeholder="Category Name">
                </div>
                <div class="field-group">
                    <label for="addDescription">Description</label>
                    <input type="text" id="addDescription" placeholder="Description">
                </div>
                <div class="field-group">
                    <label for="addFundGroup">Fund Group</label>
                    <select id="addFundGroup">
                        <option value="Group A">Group A</option>
                        <option value="Group B">Group B</option>
                        <option value="Group C">Group C</option>
                    </select>
                </div>
                <div class "field-group">
                    <label for="addFundName">Fund Name</label>
                    <select id="addFundName">
                        <option value="Fund 1">Fund 1</option>
                        <option value="Fund 2">Fund 2</option>
                        <option value="Fund 3">Fund 3</option>
                    </select>
                </div>
                <div class="field-group">
                    <label for="addAvailableFor">Available For</label>
                    <select id="addAvailableFor">
                        <option value="All">All</option>
                        <option value="Retail">Retail</option>
                        <option value="Institutional">Institutional</option>
                    </select>
                </div>
                <svg class="action-icon submit-icon" id="submitNewCategory" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9 16.2l-4.2-4.2-1.4 1.4L9 18.8l11.6-11.6-1.4-1.4L9 16.2z"/>
                </svg>
                <svg class="action-icon close-icon" id="closeAddCategoryForm" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                </svg>
            </div>
        </div>
        <div id="categoryGrid" class="ag-theme-alpine-dark"></div>
        <div class="pagination">
            <div class="left" id="categoryPaginationLeft">1 to 10 of 10</div>
            <div class="right">
                <div class="page-info" id="categoryPageInfo">Page 1 of 1</div>
                <button id="categoryPrevPage">Previous</button>
                <button id="categoryNextPage">Next</button>
            </div>
        </div>
    </div>

    <!-- Add Issuer Modal -->
    <div id="addIssuerModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeIssuerModal">×</span>
            <h2>Add New Restricted Issuer</h2>
            <div class="form-grid">
                <div class="form-group">
                    <label for="issuerName">Issuer Name</label>
                    <input type="text" id="issuerName" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="issuerType">Issuer Type</label>
                    <select id="issuerType">
                        <option value="Public">Public</option>
                        <option value="Private">Private</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="ticker">Ticker</label>
                    <input type="text" id="ticker" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="isin">ISIN</label>
                    <input type="text" id="isin" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="cusip">CUSIP</label>
                    <input type="text" id="cusip" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="sedol">SEDOL</label>
                    <input type="text" id="sedol" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="instrumentType">Instrument Type</label>
                    <select id="instrumentType">
                        <option value="Equity">Equity</option>
                        <option value="Debt">Debt</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="restrictionCategory">Restriction Category</label>
                    <select id="restrictionCategory">
                        <option value="">Select Below</option>
                        <option value="Category1">Category 1</option>
                        <option value="Category2">Category 2</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="allowedTransactionType">Allowed Transaction Type</label>
                    <select id="allowedTransactionType">
                        <option value="">Select Below</option>
                        <option value="Buy">Buy</option>
                        <option value="Sell">Sell</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="startDate">Start Date</label>
                    <input type="date" id="startDate">
                </div>
                <div class="form-group">
                    <label for="restrictionRequester">Restriction Requester</label>
                    <input type="text" id="restrictionRequester" placeholder="Enter value">
                </div>
                <div class="form-group">
                    <label for="restrictionNotes">Restriction Notes</label>
                    <input type="text" id="restrictionNotes" placeholder="Enter value">
                </div>
            </div>
            <div class="form-buttons">
                <button class="close-btn" id="closeIssuerModalBtn">Close</button>
                <button class="submit-btn" id="submitIssuerForm">Submit</button>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="delete-modal-content">
            <span class="close" id="closeDeleteModal">×</span>
            <h2>Delete Category</h2>
            <div class="delete-form-grid">
                <div class="form-group">
                    <label for="deleteDate">Delete Date</label>
                    <input type="date" id="deleteDate" value="2025-06-12">
                </div>
                <div class="form-group">
                    <label for="deleteNotes">Delete Notes</label>
                    <input type="text" id="deleteNotes" placeholder="Enter notes">
                </div>
            </div>
            <div class="form-buttons">
                <button class="close-btn" id="closeDeleteModalBtn">Close</button>
                <button class="submit-btn" id="confirmDelete">Confirm Delete</button>
            </div>
        </div>
    </div>

    <!-- Unrestrict Confirmation Modal -->
    <div id="unrestrictModal" class="modal">
        <div class="delete-modal-content">
            <span class="close" id="closeUnrestrictModal">×</span>
            <h2>Unrestrict Issuer</h2>
            <div class="delete-form-grid">
                <div class="form-group">
                    <label for="unrestrictDate">Unrestrict Date</label>
                    <input type="date" id="unrestrictDate" value="2025-06-12">
                </div>
                <div class="form-group">
                    <label for="unrestrictNotes">Unrestrict Notes</label>
                    <input type="text" id="unrestrictNotes" placeholder="Enter notes">
                </div>
            </div>
            <div class="form-buttons">
                <button class="close-btn" id="closeUnrestrictModalBtn">Close</button>
                <button class="submit-btn" id="confirmUnrestrict">Confirm Unrestrict</button>
            </div>
        </div>
    </div>

    <!-- AG-Grid JS -->
    <script src="https://unpkg.com/ag-grid-community@31.0.2/dist/ag-grid-community.min.js"></script>
    <!-- Embedded JavaScript -->
    <script>
        // Data: issuers.js
        const issuerRowData = [
            { issuerName: "Minerals Land Ltd", userEnteredName: "-", issueType: "Public", ticker: "BMG614P1014", isin: "-", cusip: "-", sedol: "-", ultimateParentName: "People's Republic of China", restrictionCategory: "ESG RL", allowedTransactionType: "None", startDate: "2025-06-09", restrictionRequester: "autoscripts", restrictionNotes: "", restrictedBy: "autoscripts", restrictedOn: "2025-06-09 09:30:00", unrestrict: "" },
            { issuerName: "Hosken Consolidated Investment", userEnteredName: "-", issueType: "Public", ticker: "-", isin: "ZAE000003257", cusip: "-", sedol: "-", ultimateParentName: "Hosken Consolidated Investment", restrictionCategory: "ESG RL", allowedTransactionType: "None", startDate: "2025-06-09", restrictionRequester: "autoscripts", restrictionNotes: "", restrictedBy: "autoscripts", restrictedOn: "2025-06-09 09:30:00", unrestrict: "" },
            { issuerName: "British American Tobacco PLC", userEnteredName: "-", issueType: "Public", ticker: "-", isin: "US1104481072", cusip: "110448107", sedol: "-", ultimateParentName: "British American Tobacco PLC", restrictionCategory: "ESG RL", allowedTransactionType: "None", startDate: "2025-06-09", restrictionRequester: "autoscripts", restrictionNotes: "", restrictedBy: "autoscripts", restrictedOn: "2025-06-09 09:30:00", unrestrict: "" },
            { issuerName: "Jaywing PLC", userEnteredName: "Jaywing PLC", issueType: "Public", ticker: "JWN LN", isin: "GB00BF5KDY46", cusip: "-", sedol: "-", ultimateParentName: "Jaywing PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2023-06-23", restrictionRequester: "Henry Turcan", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "EnQuest PLC", userEnteredName: "EnQuest PLC", issueType: "Public", ticker: "ENQ LN", isin: "GB00B635TG28", cusip: "-", sedol: "-", ultimateParentName: "EnQuest PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2024-01-22", restrictionRequester: "Henry Turcan", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "Seeing Machines Ltd", userEnteredName: "Seeing Machines Ltd", issueType: "Public", ticker: "SEE LN", isin: "AU0000XINA10", cusip: "-", sedol: "-", ultimateParentName: "Seeing Machines Ltd", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2024-12-30", restrictionRequester: "Michael Brown", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "Kibo Energy PLC", userEnteredName: "Kibo Energy PLC", issueType: "Public", ticker: "KIBO LN", isin: "IE00B97C0C31", cusip: "-", sedol: "-", ultimateParentName: "Kibo Energy PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2024-02-01", restrictionRequester: "Henry Turcan", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "Science in Sport PLC", userEnteredName: "Science in Sport PLC", issueType: "Public", ticker: "SIS LN", isin: "GB00BBPV5329", cusip: "-", sedol: "-", ultimateParentName: "Science in Sport PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2024-10-03", restrictionRequester: "Henry Turcan", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "Hemogenyx Pharmaceuticals PLC", userEnteredName: "Hemogenyx Pharmaceuticals PLC", issueType: "Public", ticker: "HEMO LN", isin: "GB00BYX3WZ24", cusip: "-", sedol: "-", ultimateParentName: "Hemogenyx Pharmaceuticals PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2024-02-20", restrictionRequester: "Rob Giles", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
            { issuerName: "Induction Healthcare Group PLC", userEnteredName: "Induction Healthcare Group PLC", issueType: "Public", ticker: "INHC LN", isin: "GB00BJ0M3545", cusip: "-", sedol: "-", ultimateParentName: "Induction Healthcare Group PLC", restrictionCategory: "Volantis RL", allowedTransactionType: "None", startDate: "2023-09-01", restrictionRequester: "Rob Giles", restrictionNotes: "", restrictedBy: "", restrictedOn: "", unrestrict: "" },
        ];

        // Data: categories.js
        const categoryRowData = [
            { categoryName: "ESG RL", description: "Environmental, Social, and Governance Restrictions", fundGroup: "Group A", fundName: "Fund 1", availableFor: "All", createdOn: "2023-01-15", createdBy: "Admin", action: "" },
            { categoryName: "Volantis RL", description: "Volantis Fund Restrictions", fundGroup: "Group B", fundName: "Fund 2", availableFor: "Institutional", createdOn: "2023-06-01", createdBy: "Henry Turcan", action: "" },
            { categoryName: "Compliance RL", description: "Regulatory Compliance Restrictions", fundGroup: "Group C", fundName: "Fund 3", availableFor: "Retail, Institutional", createdOn: "2024-02-10", createdBy: "Compliance Team", action: "" },
            { categoryName: "Risk RL", description: "High Risk Investment Restrictions", fundGroup: "Group A", fundName: "Fund 1", availableFor: "All", createdOn: "2024-05-20", createdBy: "Risk Team", action: "" },
            { categoryName: "Legal RL", description: "Legal and Litigation Restrictions", fundGroup: "Group B", fundName: "Fund 2", availableFor: "Institutional", createdOn: "2024-07-15", createdBy: "Legal Team", action: "" },
            { categoryName: "Tax RL", description: "Tax Compliance Restrictions", fundGroup: "Group C", fundName: "Fund 3", availableFor: "Retail", createdOn: "2024-09-01", createdBy: "Finance Team", action: "" },
            { categoryName: "Operational RL", description: "Operational Risk Restrictions", fundGroup: "Group A", fundName: "Fund 1", availableFor: "Retail, Institutional", createdOn: "2024-10-10", createdBy: "Operations Team", action: "" },
            { categoryName: "Market RL", description: "Market Volatility Restrictions", fundGroup: "Group B", fundName: "Fund 2", availableFor: "Institutional", createdOn: "2024-11-01", createdBy: "Trading Team", action: "" },
            { categoryName: "Geopolitical RL", description: "Geopolitical Risk Restrictions", fundGroup: "Group C", fundName: "Fund 3", availableFor: "Retail", createdOn: "2024-12-01", createdBy: "Strategy Team", action: "" },
            { categoryName: "Custom RL", description: "Custom Client Restrictions", fundGroup: "Group A", fundName: "Fund 1", availableFor: "All", createdOn: "2025-01-01", createdBy: "Client Services", action: "" },
        ];

        // Utils: theme.js
        const ThemeModule = (function () {
            function toggleTheme() {
                const body = document.body;
                const issuerGridDiv = document.querySelector('#issuerGrid');
                const historyGridDiv = document.querySelector('#historyGrid');
                const instrumentsGridDiv = document.querySelector('#instrumentsGrid');
                const categoryGridDiv = document.querySelector('#categoryGrid');
                const themeIcon = document.querySelector('#themeIcon');

                if (body.classList.contains('light-mode')) {
                    body.classList.remove('light-mode');
                    body.classList.add('dark-mode');
                    issuerGridDiv.classList.remove('ag-theme-alpine');
                    issuerGridDiv.classList.add('ag-theme-alpine-dark');
                    historyGridDiv.classList.remove('ag-theme-alpine');
                    historyGridDiv.classList.add('ag-theme-alpine-dark');
                    instrumentsGridDiv.classList.remove('ag-theme-alpine');
                    instrumentsGridDiv.classList.add('ag-theme-alpine-dark');
                    categoryGridDiv.classList.remove('ag-theme-alpine');
                    categoryGridDiv.classList.add('ag-theme-alpine-dark');
                    themeIcon.innerHTML = '<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>'; // Moon icon
                } else {
                    body.classList.remove('dark-mode');
                    body.classList.add('light-mode');
                    issuerGridDiv.classList.remove('ag-theme-alpine-dark');
                    issuerGridDiv.classList.add('ag-theme-alpine');
                    historyGridDiv.classList.remove('ag-theme-alpine-dark');
                    historyGridDiv.classList.add('ag-theme-alpine');
                    instrumentsGridDiv.classList.remove('ag-theme-alpine-dark');
                    instrumentsGridDiv.classList.add('ag-theme-alpine');
                    categoryGridDiv.classList.remove('ag-theme-alpine-dark');
                    categoryGridDiv.classList.add('ag-theme-alpine');
                    themeIcon.innerHTML = '<circle cx="12" cy="12" r="5"></circle><path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"></path>'; // Sun icon
                }
            }

            return {
                toggleTheme
            };
        })();

        // Utils: pagination.js
        const PaginationModule = (function () {
            function updatePagination(gridApi, rowData, paginationLeftId, pageInfoId) {
                const totalRows = rowData.length;
                const pageSize = gridApi.paginationGetPageSize();
                const totalPages = Math.ceil(totalRows / pageSize);
                const currentPage = gridApi.paginationGetCurrentPage() + 1;
                const startRow = (currentPage - 1) * pageSize + 1;
                const endRow = Math.min(currentPage * pageSize, totalRows);

                document.getElementById(paginationLeftId).textContent = `${startRow} to ${endRow} of ${totalRows}`;
                document.getElementById(pageInfoId).textContent = `Page ${currentPage} of ${totalPages}`;
            }

            function previousPage(gridApi, rowData, paginationLeftId, pageInfoId) {
                gridApi.paginationGoToPreviousPage();
                updatePagination(gridApi, rowData, paginationLeftId, pageInfoId);
            }

            function nextPage(gridApi, rowData, paginationLeftId, pageInfoId) {
                gridApi.paginationGoToNextPage();
                updatePagination(gridApi, rowData, paginationLeftId, pageInfoId);
            }

            return {
                updatePagination,
                previousPage,
                nextPage
            };
        })();

        // Utils: helpers.js
        const HelpersModule = (function () {
            function switchTab(tabId) {
                const tabs = document.querySelectorAll('.tabs div');
                const tabContents = document.querySelectorAll('.tab-content');

                tabs.forEach(tab => tab.classList.remove('active'));
                tabContents.forEach(content => content.classList.remove('active'));

                document.querySelector(`.tabs div[data-tab="${tabId}"]`).classList.add('active');
                document.getElementById(tabId).classList.add('active');
            }

            function exportToCSV(gridApi) {
                gridApi.exportDataAsCsv();
            }

            function clearFilters(gridApi, searchInputId) {
                gridApi.setGridOption('quickFilterText', '');
                if (searchInputId) {
                    document.getElementById(searchInputId).value = '';
                }
            }

            return {
                switchTab,
                exportToCSV,
                clearFilters
            };
        })();

        // Components: grids.js
        const GridModule = (function () {
            let issuerGridApi, historyGridApi, instrumentsGridApi, categoryGridApi;

            // Column definitions for Issuer grid (includes Unrestrict column)
            const issuerColumnDefs = [
                { headerName: "VALID ISSUER NAME", field: "issuerName", sortable: true, filter: true },
                { headerName: "USER ENTERED ISSUER NAME", field: "userEnteredName", sortable: true, filter: true },
                { 
                    headerName: "ISSUE TYPE", 
                    field: "issueType", 
                    sortable: true, 
                    filter: true,
                    cellRenderer: params => `<span class="issue-type">${params.value}</span>`
                },
                { headerName: "TICKER", field: "ticker", sortable: true, filter: true },
                { headerName: "ISIN", field: "isin", sortable: true, filter: true },
                { headerName: "CUSIP", field: "cusip", sortable: true, filter: true },
                { headerName: "SEDOL", field: "sedol", sortable: true, filter: true },
                { headerName: "ULTIMATE PARENT NAME", field: "ultimateParentName", sortable: true, filter: true },
                { headerName: "RESTRICTION CATEGORY", field: "restrictionCategory", sortable: true, filter: true },
                { headerName: "ALLOWED TRANSACTION TYPE", field: "allowedTransactionType", sortable: true, filter: true },
                { headerName: "START DATE", field: "startDate", sortable: true, filter: true },
                { headerName: "RESTRICTION REQUESTER", field: "restrictionRequester", sortable: true, filter: true },
                { headerName: "RESTRICTION NOTES", field: "restrictionNotes", sortable: true, filter: true },
                { headerName: "RESTRICTED BY", field: "restrictedBy", sortable: true, filter: true },
                { headerName: "RESTRICTED ON", field: "restrictedOn", sortable: true, filter: true },
                { 
                    headerName: "UNRESTRICT", 
                    field: "unrestrict", 
                    sortable: true, 
                    filter: true,
                    cellRenderer: params => {
                        return `
                            <svg class="action-icon" onclick="ModalModule.openUnrestrictModal('issuer', ${params.rowIndex})" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"/>
                            </svg>
                        `;
                    }
                }
            ];

            // Column definitions for History and Instruments (excludes Unrestrict column)
            const historyAndInstrumentsColumnDefs = issuerColumnDefs.filter(col => col.headerName !== "UNRESTRICT");

            // Column definitions for Restriction Categories
            const categoryColumnDefs = [
                { headerName: "CATEGORY NAME", field: "categoryName", sortable: true, filter: true, editable: true },
                { headerName: "DESCRIPTION", field: "description", sortable: true, filter: true, editable: true },
                { headerName: "FUND GROUP", field: "fundGroup", sortable: true, filter: true, editable: true },
                { headerName: "FUND NAME", field: "fundName", sortable: true, filter: true, editable: true },
                { 
                    headerName: "AVAILABLE FOR", 
                    field: "availableFor", 
                    sortable: true, 
                    filter: true, 
                    editable: true,
                    cellRenderer: params => {
                        if (!params.value) return "-";
                        const values = params.value.split(',').map(v => v.trim());
                        return values.map(value => `<span class="available-for-tag">${value}</span>`).join('');
                    }
                },
                { headerName: "CREATED ON", field: "createdOn", sortable: true, filter: true, editable: true },
                { headerName: "CREATED BY", field: "createdBy", sortable: true, filter: true, editable: true },
                { 
                    headerName: "ACTION", 
                    field: "action", 
                    sortable: true, 
                    filter: true,
                    cellRenderer: params => {
                        return `
                            <svg class="action-icon" onclick="GridModule.startEditingRow(${params.rowIndex})" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                            </svg>
                            <svg class="action-icon" onclick="ModalModule.openDeleteModal('category', ${params.rowIndex})" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/>
                            </svg>
                        `;
                    }
                }
            ];

            // Grid options for Restricted Issuers
            const issuerGridOptions = {
                columnDefs: issuerColumnDefs,
                rowData: issuerRowData,
                pagination: true,
                paginationPageSize: 100,
                paginationPageSizeSelector: [100, 200],
                domLayout: 'normal',
                defaultColDef: {
                    resizable: true,
                    sortable: true,
                    filter: true,
                },
                onGridReady: (params) => {
                    params.api.setGridOption('quickFilterText', document.getElementById('issuerSearchInput').value || '');
                },
            };

            // Grid options for Restricted Issues History (without Unrestrict column)
            const historyGridOptions = {
                columnDefs: historyAndInstrumentsColumnDefs,
                rowData: issuerRowData,
                pagination: true,
                paginationPageSize: 100,
                paginationPageSizeSelector: [100, 200],
                domLayout: 'normal',
                defaultColDef: {
                    resizable: true,
                    sortable: true,
                    filter: true,
                },
                onGridReady: (params) => {
                    params.api.setGridOption('quickFilterText', document.getElementById('historySearchInput').value || '');
                },
            };

            // Grid options for Restricted Instruments (without Unrestrict column)
            const instrumentsGridOptions = {
                columnDefs: historyAndInstrumentsColumnDefs,
                rowData: issuerRowData,
                pagination: true,
                paginationPageSize: 100,
                paginationPageSizeSelector: [100, 200],
                domLayout: 'normal',
                defaultColDef: {
                    resizable: true,
                    sortable: true,
                    filter: true,
                },
                onGridReady: (params) => {
                    params.api.setGridOption('quickFilterText', document.getElementById('instrumentsSearchInput').value || '');
                },
            };

            // Grid options for Restriction Categories
            const categoryGridOptions = {
                columnDefs: categoryColumnDefs,
                rowData: categoryRowData,
                pagination: true,
                paginationPageSize: 10,
                paginationPageSizeSelector: [10, 20, 50],
                domLayout: 'normal',
                defaultColDef: {
                    resizable: true,
                    sortable: true,
                    filter: true,
                    editable: false,
                },
                editType: 'fullRow',
                onRowEditingStopped: (event) => {
                    const rowNode = event.node;
                    const updatedData = rowNode.data;
                    categoryRowData[event.rowIndex] = updatedData;
                    categoryGridApi.setGridOption('rowData', categoryRowData);
                    PaginationModule.updatePagination(categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo');
                },
                onGridReady: (params) => {
                    params.api.setGridOption('quickFilterText', document.getElementById('categorySearchInput').value || '');
                },
            };

            // Initialize grids
            function initGrids() {
                const issuerGridDiv = document.querySelector('#issuerGrid');
                issuerGridApi = agGrid.createGrid(issuerGridDiv, issuerGridOptions);
                PaginationModule.updatePagination(issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo');

                const historyGridDiv = document.querySelector('#historyGrid');
                historyGridApi = agGrid.createGrid(historyGridDiv, historyGridOptions);
                PaginationModule.updatePagination(historyGridApi, issuerRowData, 'historyPaginationLeft', 'historyPageInfo');

                const instrumentsGridDiv = document.querySelector('#instrumentsGrid');
                instrumentsGridApi = agGrid.createGrid(instrumentsGridDiv, instrumentsGridOptions);
                PaginationModule.updatePagination(instrumentsGridApi, issuerRowData, 'instrumentsPaginationLeft', 'instrumentsPageInfo');

                const categoryGridDiv = document.querySelector('#categoryGrid');
                categoryGridApi = agGrid.createGrid(categoryGridDiv, categoryGridOptions);
                PaginationModule.updatePagination(categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo');
            }

            // Start editing a specific row in the category grid
            function startEditingRow(rowIndex) {
                categoryGridApi.startEditingCell({
                    rowIndex: rowIndex,
                    colKey: 'categoryName'
                });
            }

            // Getter for grid APIs
            function getGridApis() {
                return {
                    issuerGridApi,
                    historyGridApi,
                    instrumentsGridApi,
                    categoryGridApi
                };
            }

            return {
                initGrids,
                startEditingRow,
                getGridApis
            };
        })();

        // Components: categoryForm.js
        const CategoryFormModule = (function () {
            const gridApis = GridModule.getGridApis();

            function showAddCategoryForm() {
                document.getElementById('addCategoryForm').style.display = 'block';
            }

            function hideAddCategoryForm() {
                document.getElementById('addCategoryForm').style.display = 'none';
                document.getElementById('addCategoryName').value = '';
                document.getElementById('addDescription').value = '';
                document.getElementById('addFundGroup').value = 'Group A';
                document.getElementById('addFundName').value = 'Fund 1';
                document.getElementById('addAvailableFor').value = 'All';
            }

            function submitNewCategory() {
                const newCategory = {
                    categoryName: document.getElementById('addCategoryName').value || "-",
                    description: document.getElementById('addDescription').value || "-",
                    fundGroup: document.getElementById('addFundGroup').value || "Group A",
                    fundName: document.getElementById('addFundName').value || "Fund 1",
                    availableFor: document.getElementById('addAvailableFor').value || "All",
                    createdOn: "2025-06-12",
                    createdBy: "User",
                    action: ""
                };
                categoryRowData.unshift(newCategory);
                gridApis.categoryGridApi.setGridOption('rowData', categoryRowData);
                PaginationModule.updatePagination(gridApis.categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo');
                hideAddCategoryForm();
            }

            return {
                showAddCategoryForm,
                hideAddCategoryForm,
                submitNewCategory
            };
        })();

        // Components: modals.js
        const ModalModule = (function () {
            let selectedRowIndex = null;
            let selectedGridType = null;
            const gridApis = GridModule.getGridApis();

            // Add Issuer Modal
            function openIssuerModal() {
                document.getElementById('addIssuerModal').style.display = 'flex';
            }

            function closeIssuerModal() {
                document.getElementById('addIssuerModal').style.display = 'none';
            }

            function submitIssuerForm() {
                const newIssuer = {
                    issuerName: document.getElementById('issuerName').value || "-",
                    userEnteredName: "-",
                    issueType: document.getElementById('issuerType').value,
                    ticker: document.getElementById('ticker').value || "-",
                    isin: document.getElementById('isin').value || "-",
                    cusip: document.getElementById('cusip').value || "-",
                    sedol: document.getElementById('sedol').value || "-",
                    ultimateParentName: document.getElementById('issuerName').value || "-",
                    restrictionCategory: document.getElementById('restrictionCategory').value || "-",
                    allowedTransactionType: document.getElementById('allowedTransactionType').value || "-",
                    startDate: document.getElementById('startDate').value || "-",
                    restrictionRequester: document.getElementById('restrictionRequester').value || "-",
                    restrictionNotes: document.getElementById('restrictionNotes').value || "-",
                    restrictedBy: "-",
                    restrictedOn: "-",
                    unrestrict: "-"
                };
                issuerRowData.push(newIssuer);
                gridApis.issuerGridApi.setGridOption('rowData', issuerRowData);
                PaginationModule.updatePagination(gridApis.issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo');
                closeIssuerModal();
            }

            // Delete Modal
            function openDeleteModal(gridType, rowIndex) {
                selectedGridType = gridType;
                selectedRowIndex = rowIndex;
                document.getElementById('deleteModal').style.display = 'flex';
            }

            function closeDeleteModal() {
                document.getElementById('deleteModal').style.display = 'none';
                selectedRowIndex = null;
                selectedGridType = null;
            }

            function confirmDelete() {
                if (selectedRowIndex !== null && selectedGridType !== null) {
                    if (selectedGridType === 'issuer') {
                        issuerRowData.splice(selectedRowIndex, 1);
                        gridApis.issuerGridApi.setGridOption('rowData', issuerRowData);
                        PaginationModule.updatePagination(gridApis.issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo');
                    } else if (selectedGridType === 'category') {
                        categoryRowData.splice(selectedRowIndex, 1);
                        gridApis.categoryGridApi.setGridOption('rowData', categoryRowData);
                        PaginationModule.updatePagination(gridApis.categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo');
                    }
                    closeDeleteModal();
                }
            }

            // Unrestrict Modal
            function openUnrestrictModal(gridType, rowIndex) {
                selectedGridType = gridType;
                selectedRowIndex = rowIndex;
                document.getElementById('unrestrictModal').style.display = 'flex';
            }

            function closeUnrestrictModal() {
                document.getElementById('unrestrictModal').style.display = 'none';
                document.getElementById('unrestrictDate').value = '2025-06-12';
                document.getElementById('unrestrictNotes').value = '';
                selectedRowIndex = null;
                selectedGridType = null;
            }

            function confirmUnrestrict() {
                if (selectedRowIndex !== null && selectedGridType !== null) {
                    if (selectedGridType === 'issuer') {
                        issuerRowData.splice(selectedRowIndex, 1);
                        gridApis.issuerGridApi.setGridOption('rowData', issuerRowData);
                        PaginationModule.updatePagination(gridApis.issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo');
                    }
                    closeUnrestrictModal();
                }
            }

            return {
                openIssuerModal,
                closeIssuerModal,
                submitIssuerForm,
                openDeleteModal,
                closeDeleteModal,
                confirmDelete,
                openUnrestrictModal,
                closeUnrestrictModal,
                confirmUnrestrict
            };
        })();

        // Main: main.js
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize grids first
            GridModule.initGrids();

            // Access grid APIs after initialization
            const gridApis = GridModule.getGridApis();

            // Theme toggle
            document.getElementById('themeToggle').addEventListener('click', ThemeModule.toggleTheme);

            // Tab switching
            document.querySelectorAll('.tabs div').forEach(tab => {
                tab.addEventListener('click', () => {
                    const tabId = tab.getAttribute('data-tab');
                    HelpersModule.switchTab(tabId);
                });
            });

            // Search functionality for Issuers
            const issuerSearchInput = document.getElementById('issuerSearchInput');
            if (issuerSearchInput && gridApis.issuerGridApi) {
                issuerSearchInput.addEventListener('input', function(e) {
                    gridApis.issuerGridApi.setGridOption('quickFilterText', e.target.value);
                });
            } else {
                console.error('Issuer search input or grid API not found.');
            }

            // Search functionality for History
            const historySearchInput = document.getElementById('historySearchInput');
            if (historySearchInput && gridApis.historyGridApi) {
                historySearchInput.addEventListener('input', function(e) {
                    gridApis.historyGridApi.setGridOption('quickFilterText', e.target.value);
                });
            } else {
                console.error('History search input or grid API not found.');
            }

            // Search functionality for Instruments
            const instrumentsSearchInput = document.getElementById('instrumentsSearchInput');
            if (instrumentsSearchInput && gridApis.instrumentsGridApi) {
                instrumentsSearchInput.addEventListener('input', function(e) {
                    gridApis.instrumentsGridApi.setGridOption('quickFilterText', e.target.value);
                });
            } else {
                console.error('Instruments search input or grid API not found.');
            }

            // Search functionality for Categories
            const categorySearchInput = document.getElementById('categorySearchInput');
            if (categorySearchInput && gridApis.categoryGridApi) {
                categorySearchInput.addEventListener('input', function(e) {
                    gridApis.categoryGridApi.setGridOption('quickFilterText', e.target.value);
                });
            } else {
                console.error('Category search input or grid API not found.');
            }

            // Issuer grid events
            document.getElementById('addIssuerBtn').addEventListener('click', ModalModule.openIssuerModal);
            document.getElementById('closeIssuerModal').addEventListener('click', ModalModule.closeIssuerModal);
            document.getElementById('closeIssuerModalBtn').addEventListener('click', ModalModule.closeIssuerModal);
            document.getElementById('submitIssuerForm').addEventListener('click', ModalModule.submitIssuerForm);
            document.getElementById('clearIssuerFilters').addEventListener('click', () => HelpersModule.clearFilters(gridApis.issuerGridApi, 'issuerSearchInput'));
            document.getElementById('exportIssuerBtn').addEventListener('click', () => HelpersModule.exportToCSV(gridApis.issuerGridApi));
            document.getElementById('issuerPrevPage').addEventListener('click', () => PaginationModule.previousPage(gridApis.issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo'));
            document.getElementById('issuerNextPage').addEventListener('click', () => PaginationModule.nextPage(gridApis.issuerGridApi, issuerRowData, 'issuerPaginationLeft', 'issuerPageInfo'));

            // History grid events
            document.getElementById('clearHistoryFilters').addEventListener('click', () => HelpersModule.clearFilters(gridApis.historyGridApi, 'historySearchInput'));
            document.getElementById('exportHistoryBtn').addEventListener('click', () => HelpersModule.exportToCSV(gridApis.historyGridApi));
            document.getElementById('historyPrevPage').addEventListener('click', () => PaginationModule.previousPage(gridApis.historyGridApi, issuerRowData, 'historyPaginationLeft', 'historyPageInfo'));
            document.getElementById('historyNextPage').addEventListener('click', () => PaginationModule.nextPage(gridApis.historyGridApi, issuerRowData, 'historyPaginationLeft', 'historyPageInfo'));

            // Instruments grid events
            document.getElementById('clearInstrumentsFilters').addEventListener('click', () => HelpersModule.clearFilters(gridApis.instrumentsGridApi, 'instrumentsSearchInput'));
            document.getElementById('exportInstrumentsBtn').addEventListener('click', () => HelpersModule.exportToCSV(gridApis.instrumentsGridApi));
            document.getElementById('instrumentsPrevPage').addEventListener('click', () => PaginationModule.previousPage(gridApis.instrumentsGridApi, issuerRowData, 'instrumentsPaginationLeft', 'instrumentsPageInfo'));
            document.getElementById('instrumentsNextPage').addEventListener('click', () => PaginationModule.nextPage(gridApis.instrumentsGridApi, issuerRowData, 'instrumentsPaginationLeft', 'instrumentsPageInfo'));

            // Category grid events
            document.getElementById('addCategoryBtn').addEventListener('click', CategoryFormModule.showAddCategoryForm);
            document.getElementById('closeAddCategoryForm').addEventListener('click', CategoryFormModule.hideAddCategoryForm);
            document.getElementById('submitNewCategory').addEventListener('click', CategoryFormModule.submitNewCategory);
            document.getElementById('clearCategoryFilters').addEventListener('click', () => HelpersModule.clearFilters(gridApis.categoryGridApi, 'categorySearchInput'));
            document.getElementById('exportCategoryBtn').addEventListener('click', () => HelpersModule.exportToCSV(gridApis.categoryGridApi));
            document.getElementById('categoryPrevPage').addEventListener('click', () => PaginationModule.previousPage(gridApis.categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo'));
            document.getElementById('categoryNextPage').addEventListener('click', () => PaginationModule.nextPage(gridApis.categoryGridApi, categoryRowData, 'categoryPaginationLeft', 'categoryPageInfo'));

            // Delete modal events
            document.getElementById('closeDeleteModal').addEventListener('click', ModalModule.closeDeleteModal);
            document.getElementById('closeDeleteModalBtn').addEventListener('click', ModalModule.closeDeleteModal);
            document.getElementById('confirmDelete').addEventListener('click', ModalModule.confirmDelete);

            // Unrestrict modal events
            document.getElementById('closeUnrestrictModal').addEventListener('click', ModalModule.closeUnrestrictModal);
            document.getElementById('closeUnrestrictModalBtn').addEventListener('click', ModalModule.closeUnrestrictModal);
            document.getElementById('confirmUnrestrict').addEventListener('click', ModalModule.confirmUnrestrict);
        });
    </script>
</body>
</html>
